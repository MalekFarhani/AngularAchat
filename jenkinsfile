pipeline{
    agent any

stages{
    stage('Cleaning The Workspace')
        {
            steps{
                cleanWs()
                 }
        } 

    stage('Pulling the code from Github')
        {
            steps{
                git branch: 'dev', 
                url: 'https://github.com/MalekFarhani/AngularAchat'
                 }   
        }
    
stage("Installing Dependencies")
        {
            steps{
            sh "npm install"
                 }
        }

 stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
    stage('TRIVY FS SCAN') {
            steps{
                sh "trivy fs . > trivyfs.txt"
                 }
        } 
    
    stage("Run Build & Zip the dist "){
            steps {
            sh "CI=false npm run build"
            sh "ls -l"
            sh "zip -j -r build.zip dist/crudtuto-Front/*"
                  }
        }

    stage('Deploying to Nexus nginx.conf & build.zip') {
            steps {
                nexusArtifactUploader artifacts: [
                    [
                        artifactId: 'nginx-config',
                        classifier: '',
                        file: 'nginx.conf',
                        type: ''
                    ],

                    [  
                        artifactId: 'front-build',
                        classifier: '',
                        file: 'build.zip',
                        type: 'achat.zip'

                    ]
                ],
                credentialsId: 'nexus-cred',
                groupId: 'achatconfig',
                version: "1.0.0",
                nexusUrl: '192.168.222.133:8081',
                nexusVersion: 'nexus3',
                protocol: 'http',
                repository: 'achatfront'
                 }
        }

    stage('Building The Image'){
        steps{ 
                sh 'docker build . -t malekkkk/achatfdev:1.0'  
             }    
        }

    stage('DockerHub Login'){
        steps {
                withCredentials([string(credentialsId: 'dockerhu', variable: 'dockerhubpwd')]) {      
                        sh "echo \$dockerhubpwd | docker login -u malekkkk --password-stdin"}
              }
        }

    stage ('Pushing the Image to The Repo'){
        steps{
            sh 'docker push malekkkk/achatfdev:1.0'  
             }
        }
   

    stage("TRIVY IMAGE Scan"){
            steps{
                sh "trivy image malekkkk/achatfdev:1.0 > trivyimage.txt" 
                 }
        } 
  
}     

  post {
     always {
        script {
      //  def owaspFsScanReportPath = "**/dependency-check-report.xml"
        emailext attachLog: true,
            subject: "'${currentBuild.result}'",
            body: "Project: ${env.JOB_NAME}<br/>" +
                "Build Number: ${env.BUILD_NUMBER}<br/>" +
                "URL: ${env.BUILD_URL}<br/>",
            to: 'devopsteam1009@gmail.com',
            attachmentsPattern: 'trivyfs.txt,trivyimage.txt' //${owaspFsScanReportPath}
        }}
    }
}